<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:global-method-security secured-annotations="enabled" />

    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <constructor-arg ref="roleHierarchy" />
    </bean>
    
    <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_STAFF
                ROLE_STAFF > ROLE_USER
            </value>
        </property>
    </bean>

    <bean id="defaultWebSecurityExpressionHandler"
          class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
          <property name="roleHierarchy" ref="roleHierarchy"/>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter" />
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
                    <property name="expressionHandler" ref="defaultWebSecurityExpressionHandler"/>
                </bean>
            </list>
        </property>
    </bean>

    <security:http auto-config="true" pattern="/resources/**" use-expressions="true">
            <security:intercept-url pattern="/resources/**" access="permitAll" />
    </security:http>

    <security:http auto-config="true" pattern="/admin/**" use-expressions="true">
        <security:intercept-url pattern="/admin/login" access="permitAll" />
        <security:intercept-url pattern="/admin/logout" access="permitAll" />
        <security:intercept-url pattern="/admin/home" access="hasRole('ROLE_STAFF')" />
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_STAFF')" />

        <security:form-login login-page="/admin/login"
                             login-processing-url="/admin/logging"
                             default-target-url="/admin/home"
                             always-use-default-target="true"
                             authentication-failure-url="/admin/login?invalid=1"
                             username-parameter="username"
                             password-parameter="password" />
        <security:logout logout-url="/admin/logout" logout-success-url="/admin/login?out=1" />
    </security:http>

    <security:http auto-config="true" pattern="/**" use-expressions="true">
        <security:intercept-url pattern="/**" access="permitAll" />

        <security:form-login login-page="/"
                             login-processing-url="/logging"
                             default-target-url="/?success=1"
                             always-use-default-target="true"
                             authentication-failure-url="/?invalid=1"
                             username-parameter="username"
                             password-parameter="password" />
        <security:logout logout-url="/logout" logout-success-url="/?out=1" />
    </security:http>

    <bean name="backendAuthenticationProvider" class="com.roztleskavacky.kosmeticky_salon.model.BackendAuthenticationProvider">
        <constructor-arg>
            <ref bean="userDAO" />
        </constructor-arg>
    </bean>

    <bean name="frontendAuthenticationProvider" class="com.roztleskavacky.kosmeticky_salon.model.FrontendAuthenticationProvider">
        <constructor-arg>
            <ref bean="userDAO" />
        </constructor-arg>
    </bean>

    <security:authentication-manager>
        <security:authentication-provider ref="frontendAuthenticationProvider" />
        <!--<security:authentication-provider ref="backendAuthenticationProvider" />-->
    </security:authentication-manager>

</beans>